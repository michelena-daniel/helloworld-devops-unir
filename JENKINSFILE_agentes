pipeline {
    agent none

    stages {
        stage('Get Code') {
	    agent { label 'agent-windows' }
            steps {
		bat 'whoami & hostname'
		echo WORKSPACE
                echo 'Clonamos repo'
                git url: 'https://github.com/michelena-daniel/helloworld-devops-unir.git'				
                bat 'dir'
                stash name: 'repo', includes: '**'
            }
        }

        stage('Build') {
	    agent { label 'agent-windows' }
            steps {
		bat 'whoami & hostname'
		echo WORKSPACE
                echo 'Compilacion mock'
            }
        }

        stage('Tests') {
            parallel {
                stage('Unit') {
		    agent { label 'agent-unit' }
                    steps {
                        bat 'whoami & hostname'
			echo WORKSPACE
			unstash 'repo'
                        bat '''
                            SET PYTHONPATH=.
                            pytest --junitxml=result-unit.xml test\\unit
                        '''
			stash name: 'unit-result', includes: 'result-unit.xml'
                    }
                }

                stage('Rest') {
		    agent { label 'agent-unit' }
                    steps {
                        bat 'whoami & hostname'
			echo WORKSPACE
			unstash 'repo'
                        catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
                            bat '''								
                                set FLASK_APP=app\\api.py
                                set FLASK_ENV=development
                                start /b flask run
                            '''
                            echo 'Mount wiremock container'
                            script {
                              bat 'docker rm -f wiremock || echo "Nothing to remove."'
                              def ws = env.WORKSPACE.replaceAll('\\\\','/')
                              bat """
                                docker run -d --rm -p 9090:8080 --name wiremock ^
                                  -v "${ws}/test/wiremock:/home/wiremock" ^
                                  wiremock/wiremock:3.13.0 ^
                                  --root-dir /home/wiremock ^
                                  --verbose
                              """
                            }
                            
                            sleep(time: 5, unit: 'SECONDS')
                            
                            bat '''
                                SET PYTHONPATH=%WORKSPACE%
                                pytest --junitxml=result-rest.xml test\\rest
                            '''
                        }
			stash name: 'rest-result', includes: 'result-rest.xml'
                    }
                }
            }
        }
        stage('Results') {
	    agent { label 'principal' }
            steps(){
		unstash 'unit-result'
		unstash 'rest-result'				
		bat 'whoami & hostname'
		echo WORKSPACE
                junit 'result*.xml'
            }
        }
        stage('Cleanup') {
          parallel {
            stage('Win Cleanup') {
              agent { label 'agent-windows' }
              steps { cleanWs() }
            }
            stage('Unit Cleanup') {
              agent { label 'agent-unit' }
              steps { cleanWs() }
            }
            stage('Principal Cleanup') {
              agent { label 'principal' }
              steps { cleanWs() }
            }
          }
       }
    }
}
